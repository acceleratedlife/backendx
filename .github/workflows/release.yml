name: Go

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Build
      run: |
        export CGO_ENABLED=0
        export GOOS=linux
        export GOARCH=amd64
        mkdir -p out
        # Add production flag to the build
        go build -a -installsuffix cgo -ldflags="-w -s -X main.build_date=$GITHUB_SHA -X main.production=true" -o out/backend .

    - name: Test
      run: go test -v ./...

    - name: deploy
      if: ${{ github.ref == 'refs/heads/release' }}
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASS }}
        key: ${{ secrets.KEY }}
        source: "out/backend,alcfg.yml"  # Include config file
        target: ${{ secrets.PROD_TARGET }}

    # Add a step to verify deployment
    - name: verify-deployment
      if: ${{ github.ref == 'refs/heads/release' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASS }}
        key: ${{ secrets.KEY }}
        script: |
          cd ${{ secrets.PROD_TARGET }}
          ./backend -version || true
          ps aux | grep backend
          # Check logs for SSE initialization
          tail -n 50 backend.log || true

    - name: executing remote ssh commands using ssh key
      if: ${{ github.ref == 'refs/heads/release' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASS }}
        key: ${{ secrets.KEY }}
        script: ${{ secrets.SCRIPT }}

