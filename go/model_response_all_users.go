/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ResponseAllUsers struct {

	Id string `json:"_id"`

	FirstName string `json:"firstName"`

	LastName string `json:"lastName"`

	School string `json:"school"`

	Role int32 `json:"role"`
}

// AssertResponseAllUsersRequired checks if the required fields are not zero-ed
func AssertResponseAllUsersRequired(obj ResponseAllUsers) error {
	elements := map[string]interface{}{
		"_id": obj.Id,
		"firstName": obj.FirstName,
		"lastName": obj.LastName,
		"school": obj.School,
		"role": obj.Role,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseResponseAllUsersRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ResponseAllUsers (e.g. [][]ResponseAllUsers), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseResponseAllUsersRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aResponseAllUsers, ok := obj.(ResponseAllUsers)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertResponseAllUsersRequired(aResponseAllUsers)
	})
}
