/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type ResponseEvents struct {

	Value int32 `json:"value,omitempty"`

	CreatedAt time.Time `json:"createdAt,omitempty"`

	Description string `json:"description,omitempty"`

	TransactionId string `json:"transaction_id,omitempty"`

	OwnerId ResponseEventsOwnerId `json:"owner_id,omitempty"`
}

// AssertResponseEventsRequired checks if the required fields are not zero-ed
func AssertResponseEventsRequired(obj ResponseEvents) error {
	if err := AssertResponseEventsOwnerIdRequired(obj.OwnerId); err != nil {
		return err
	}
	return nil
}

// AssertRecurseResponseEventsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ResponseEvents (e.g. [][]ResponseEvents), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseResponseEventsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aResponseEvents, ok := obj.(ResponseEvents)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertResponseEventsRequired(aResponseEvents)
	})
}
