/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.2
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ResponseMarketItem struct {

	OwnerId ResponseMemberClassOwner `json:"owner_id,omitempty"`

	Count int32 `json:"count,omitempty"`

	Cost int32 `json:"cost,omitempty"`

	Title string `json:"title,omitempty"`

	Id string `json:"_id,omitempty"`

	Buyers []ResponseMemberClassOwner `json:"buyers,omitempty"`
}

// AssertResponseMarketItemRequired checks if the required fields are not zero-ed
func AssertResponseMarketItemRequired(obj ResponseMarketItem) error {
	if err := AssertResponseMemberClassOwnerRequired(obj.OwnerId); err != nil {
		return err
	}
	for _, el := range obj.Buyers {
		if err := AssertResponseMemberClassOwnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseResponseMarketItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ResponseMarketItem (e.g. [][]ResponseMarketItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseResponseMarketItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aResponseMarketItem, ok := obj.(ResponseMarketItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertResponseMarketItemRequired(aResponseMarketItem)
	})
}
