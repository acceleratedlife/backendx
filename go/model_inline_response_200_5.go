/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type InlineResponse2005 struct {
	Id string `json:"_id,omitempty"`

	Bid float32 `json:"bid,omitempty"`

	Description string `json:"description,omitempty"`

	EndDate time.Time `json:"endDate,omitempty"`

	StartDate time.Time `json:"startDate,omitempty"`

	ItemNumber string `json:"itemNumber,omitempty"`

	Winner AuctionsauctionWinner `json:"winner,omitempty"`

	Visibility []AuctionsauctionVisibility `json:"visibility,omitempty"`
}

// AssertInlineResponse2005Required checks if the required fields are not zero-ed
func AssertInlineResponse2005Required(obj InlineResponse2005) error {
	if err := AssertAuctionsauctionWinnerRequired(obj.Winner); err != nil {
		return err
	}
	for _, el := range obj.Visibility {
		if err := AssertAuctionsauctionVisibilityRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseInlineResponse2005Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InlineResponse2005 (e.g. [][]InlineResponse2005), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseInlineResponse2005Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInlineResponse2005, ok := obj.(InlineResponse2005)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertInlineResponse2005Required(aInlineResponse2005)
	})
}
