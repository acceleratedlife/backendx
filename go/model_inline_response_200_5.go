/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type InlineResponse2005 struct {

	Account string `json:"account,omitempty"`

	Owner string `json:"owner,omitempty"`

	Balance float32 `json:"balance,omitempty"`

	Description string `json:"description,omitempty"`

	ConversionRatio float32 `json:"conversionRatio,omitempty"`

	Amount float32 `json:"amount,omitempty"`

	UBucks float32 `json:"uBucks,omitempty"`

	Type string `json:"type,omitempty"`

	AssetID InlineResponse2005AssetId `json:"assetID,omitempty"`
}

// AssertInlineResponse2005Required checks if the required fields are not zero-ed
func AssertInlineResponse2005Required(obj InlineResponse2005) error {
	if err := AssertInlineResponse2005AssetIdRequired(obj.AssetID); err != nil {
		return err
	}
	return nil
}

// AssertRecurseInlineResponse2005Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InlineResponse2005 (e.g. [][]InlineResponse2005), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseInlineResponse2005Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInlineResponse2005, ok := obj.(InlineResponse2005)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertInlineResponse2005Required(aInlineResponse2005)
	})
}
