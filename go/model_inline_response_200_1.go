/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.2
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type InlineResponse2001 struct {

	Transaction InlineResponse2001Transaction `json:"transaction,omitempty"`

	Accounts []InlineResponse2001Accounts `json:"accounts,omitempty"`
}

// AssertInlineResponse2001Required checks if the required fields are not zero-ed
func AssertInlineResponse2001Required(obj InlineResponse2001) error {
	if err := AssertInlineResponse2001TransactionRequired(obj.Transaction); err != nil {
		return err
	}
	for _, el := range obj.Accounts {
		if err := AssertInlineResponse2001AccountsRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseInlineResponse2001Required recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InlineResponse2001 (e.g. [][]InlineResponse2001), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseInlineResponse2001Required(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInlineResponse2001, ok := obj.(InlineResponse2001)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertInlineResponse2001Required(aInlineResponse2001)
	})
}
