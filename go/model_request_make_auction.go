/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type RequestMakeAuction struct {
	Bid int32 `json:"bid,omitempty"`

	MaxBid int32 `json:"maxBid,omitempty"`

	Description string `json:"description,omitempty"`

	EndDate time.Time `json:"endDate,omitempty"`

	StartDate time.Time `json:"startDate,omitempty"`

	Owner_id string `json:"owner_id,omitempty"`

	Visibility []string `json:"visibility,omitempty"`
}

// AssertRequestMakeAuctionRequired checks if the required fields are not zero-ed
func AssertRequestMakeAuctionRequired(obj RequestMakeAuction) error {
	return nil
}

// AssertRecurseRequestMakeAuctionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RequestMakeAuction (e.g. [][]RequestMakeAuction), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRequestMakeAuctionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRequestMakeAuction, ok := obj.(RequestMakeAuction)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRequestMakeAuctionRequired(aRequestMakeAuction)
	})
}
