/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ResponseMarketItems struct {

	OwnerId ResponseMemberClassOwner `json:"owner_id,omitempty"`

	Count int32 `json:"count,omitempty"`

	Cost int32 `json:"cost,omitempty"`

	Title string `json:"title,omitempty"`

	Buyers []ResponseMemberClassOwner `json:"buyers,omitempty"`
}

// AssertResponseMarketItemsRequired checks if the required fields are not zero-ed
func AssertResponseMarketItemsRequired(obj ResponseMarketItems) error {
	if err := AssertResponseMemberClassOwnerRequired(obj.OwnerId); err != nil {
		return err
	}
	for _, el := range obj.Buyers {
		if err := AssertResponseMemberClassOwnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseResponseMarketItemsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ResponseMarketItems (e.g. [][]ResponseMarketItems), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseResponseMarketItemsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aResponseMarketItems, ok := obj.(ResponseMarketItems)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertResponseMarketItemsRequired(aResponseMarketItems)
	})
}
