/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import "time"

type Crypto struct {
	UpdatedAt time.Time `json:"updatedAt"`

	Usd float32 `json:"usd"`
}

// AssertCryptoRequired checks if the required fields are not zero-ed
func AssertCryptoRequired(obj Crypto) error {
	elements := map[string]interface{}{
		"updatedAt": obj.UpdatedAt,
		"usd":       obj.Usd,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCryptoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Crypto (e.g. [][]Crypto), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCryptoRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCrypto, ok := obj.(Crypto)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCryptoRequired(aCrypto)
	})
}
