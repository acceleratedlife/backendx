/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Event struct {

	Id string `json:"_id"`

	OwnerId string `json:"owner_id,omitempty"`

	TransactionId string `json:"transaction_id,omitempty"`

	Value int32 `json:"value"`

	Description string `json:"description"`
}

// AssertEventRequired checks if the required fields are not zero-ed
func AssertEventRequired(obj Event) error {
	elements := map[string]interface{}{
		"_id": obj.Id,
		"value": obj.Value,
		"description": obj.Description,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseEventRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Event (e.g. [][]Event), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseEventRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aEvent, ok := obj.(Event)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertEventRequired(aEvent)
	})
}
