/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Class struct {

	Id string `json:"_id"`

	OwnerId string `json:"owner_id,omitempty"`

	Period int32 `json:"period"`

	Name string `json:"name"`

	AddCode string `json:"addCode"`

	Members []string `json:"members"`
}

// AssertClassRequired checks if the required fields are not zero-ed
func AssertClassRequired(obj Class) error {
	elements := map[string]interface{}{
		"_id": obj.Id,
		"period": obj.Period,
		"name": obj.Name,
		"addCode": obj.AddCode,
		"members": obj.Members,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseClassRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Class (e.g. [][]Class), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseClassRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aClass, ok := obj.(Class)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertClassRequired(aClass)
	})
}
