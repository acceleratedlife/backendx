/*
 * AL
 *
 * This is a simple API
 *
 * API version: 1.0.1
 * Contact: you@your-company.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type InlineResponse2003Transaction struct {

	Account string `json:"account,omitempty"`

	Amount float32 `json:"amount,omitempty"`

	Balance float32 `json:"balance,omitempty"`

	ConversionRatio float32 `json:"conversionRatio,omitempty"`

	Description string `json:"description,omitempty"`

	Owner string `json:"owner,omitempty"`

	Type string `json:"type,omitempty"`

	UBucks float32 `json:"uBucks,omitempty"`

	AssetID InlineResponse2003TransactionAssetId `json:"assetID,omitempty"`
}

// AssertInlineResponse2003TransactionRequired checks if the required fields are not zero-ed
func AssertInlineResponse2003TransactionRequired(obj InlineResponse2003Transaction) error {
	if err := AssertInlineResponse2003TransactionAssetIdRequired(obj.AssetID); err != nil {
		return err
	}
	return nil
}

// AssertRecurseInlineResponse2003TransactionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of InlineResponse2003Transaction (e.g. [][]InlineResponse2003Transaction), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseInlineResponse2003TransactionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aInlineResponse2003Transaction, ok := obj.(InlineResponse2003Transaction)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertInlineResponse2003TransactionRequired(aInlineResponse2003Transaction)
	})
}
